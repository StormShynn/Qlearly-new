! function(e) {
    function t(t) { for (var n, s, c = t[0], l = t[1], o = t[2], d = 0, u = []; d < c.length; d++) s = c[d], i[s] && u.push(i[s][0]), i[s] = 0; for (n in l) Object.prototype.hasOwnProperty.call(l, n) && (e[n] = l[n]); for (m && m(t); u.length;) u.shift()(); return r.push.apply(r, o || []), a() }

    function a() {
        for (var e, t = 0; t < r.length; t++) {
            for (var a = r[t], n = !0, c = 1; c < a.length; c++) {
                var l = a[c];
                0 !== i[l] && (n = !1)
            }
            n && (r.splice(t--, 1), e = s(s.s = a[0]))
        }
        return e
    }
    var n = {},
        i = { 0: 0 },
        r = [];

    function s(t) { if (n[t]) return n[t].exports; var a = n[t] = { i: t, l: !1, exports: {} }; return e[t].call(a.exports, a, a.exports, s), a.l = !0, a.exports }
    s.m = e, s.c = n, s.d = function(e, t, a) { s.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: a }) }, s.r = function(e) { "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, s.t = function(e, t) {
        if (1 & t && (e = s(e)), 8 & t) return e;
        if (4 & t && "object" === typeof e && e && e.__esModule) return e;
        var a = Object.create(null);
        if (s.r(a), Object.defineProperty(a, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e)
            for (var n in e) s.d(a, n, function(t) { return e[t] }.bind(null, n));
        return a
    }, s.n = function(e) { var t = e && e.__esModule ? function() { return e.default } : function() { return e }; return s.d(t, "a", t), t }, s.o = function(e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, s.p = "/";
    var c = window.webpackJsonp = window.webpackJsonp || [],
        l = c.push.bind(c);
    c.push = t, c = c.slice();
    for (var o = 0; o < c.length; o++) t(c[o]);
    var m = l;
    r.push([10, 1]), a()
}({
    10: function(e, t, a) { e.exports = a(17) },
    16: function(e, t, a) {},
    17: function(e, t, a) {
        "use strict";
        a.r(t);
        var n = a(0),
            i = a.n(n),
            r = a(9),
            s = a.n(r),
            c = (a(16), a(2)),
            l = a(3),
            o = a(5),
            m = a(4),
            d = a(1),
            u = a(6),
            p = function(e) {
                function t() { return Object(c.a)(this, t), Object(o.a)(this, Object(m.a)(t).apply(this, arguments)) }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "componentDidMount", value: function() { profilePop(), this.$node = $(this.refs.sortable), this.$node.sortable({ connectWith: ".q-board-block", scroll: !1 }) } }, { key: "render", value: function() { return i.a.createElement("div", null, i.a.createElement("header", { className: "header" }, i.a.createElement("nav", { className: "navbar navbar-expand-lg navbar-light bg-light" }, i.a.createElement("div", { className: "navbar-collapse ", id: "navbarNav" }, i.a.createElement("ul", { className: "navbar-nav" }, i.a.createElement("li", { className: "nav-item active" }, i.a.createElement("a", { className: "nav-link link-hover  ml-auto " }, i.a.createElement("img", { src: "asset/image/home.svg", alt: "home" })))), i.a.createElement("ul", { className: "navbar-nav centermenu secondmenu", id: "center_search" }, i.a.createElement("form", { className: "form-inline search_barnew dropdown" }, i.a.createElement("span", { className: "clearsearch" }, i.a.createElement("img", { src: "asset/image/cross_icon_red.png", alt: "cancel" })), i.a.createElement("img", { src: "asset/image/search.png", alt: "search" }), i.a.createElement("input", { type: "text", className: "form-control", placeholder: "Search", id: "top_search", autocomplete: "off", "data-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": "false" }), i.a.createElement("ul", { className: "list-group list-group-flush dropdown-menu mt-3 p-0", "aria-labelledby": "top_search", id: "search_result" }))), i.a.createElement("ul", { className: "navbar-nav thirdmenu" }, i.a.createElement("li", { className: "nav-item active showOnResp" }, i.a.createElement("a", { className: "nav-link showSearch", href: "javascript:void(0);" }, i.a.createElement("img", { src: "asset/image/blue_search.png", height: "14", alt: "search" }))), i.a.createElement("li", { className: "nav-item active mr-auto homebtn", id: "open_bookmark_btn" }, i.a.createElement("a", { className: "nav-link d-flex showCrntSsion", href: "#", "data-type": "bookmark" }, i.a.createElement("span", null, "Bookmarks"))), i.a.createElement("li", { className: "nav-item active mr-auto homebtn", id: "showCrntSsion_container" }, i.a.createElement("a", { className: "nav-link d-flex showCrntSsion", href: "#", id: "showCrntSsion", "data-type": "current_tabs" }, i.a.createElement("span", null, "Current tabs"))), i.a.createElement("li", { className: "nav-item active posrel profile_container", id: "profile_container" }, i.a.createElement("a", { className: "nav-link d-flex optSettings", href: "#", id: "show_user_name" }, i.a.createElement("img", { src: "asset/image/profile_icon.png", alt: "profile", className: "showOnResp", height: "18" }), i.a.createElement("span", { className: "homebtn" }, "Profile"))))))), i.a.createElement("div", { className: "sidebarRight", id: "csc_right" }, i.a.createElement("ul", { className: "list-group list-group-flush mt-3  csc-entry-list", ref: "sortable" }, i.a.createElement("li", null, "You have no open tabs"))), i.a.createElement("div", { id: "guestmode" })) } }]), t
            }(n.Component),
            g = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).click = function(e) { a.props.parentMethod(e) }, a.click = a.click.bind(Object(d.a)(a)), a }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "render", value: function() { var e = this; return i.a.createElement("div", { class: "white_box animated fadeInUp" }, i.a.createElement("ul", { class: "mylistgroup" }, i.a.createElement("li", null, i.a.createElement("h4", { class: "text-muted mb-3" }, "Boards")), i.a.createElement("li", null, i.a.createElement("a", { onClick: function() { return e.click("boards") }, className: "boards" === this.props.currentMenu ? "active text-decoration-none px-2 py-3" : "text-decoration-none px-2 py-3" }, i.a.createElement("span", null, i.a.createElement("img", { src: "asset/image/boards_icon.png", height: "21" })), "Your boards")), i.a.createElement("li", null, i.a.createElement("h4", { class: "text-muted mb-3 mt-4" }, "Settings")), i.a.createElement("li", null, i.a.createElement("a", { onClick: function() { return e.click("account-setting") }, className: "account-setting" == this.props.currentMenu ? "active text-decoration-none px-2 py-3" : "text-decoration-none px-2 py-3" }, i.a.createElement("span", null, i.a.createElement("img", { src: "asset/image/account_settings_icon.png", height: "21" })), "Account Settings")), i.a.createElement("li", null, i.a.createElement("h4", { class: "text-muted mb-3 mt-4" }, "Help")), i.a.createElement("li", null, i.a.createElement("a", { className: "text-decoration-none px-2 py-3", target: "_blank", href: "https://www.facebook.com/StormShyn" }, i.a.createElement("span", null, i.a.createElement("img", { src: "asset/image/help_icon.png", height: "21" })), "Help Center")), i.a.createElement("li", null, i.a.createElement("a", { className: "text-decoration-none px-2 py-3", target: "_blank", href: "https://www.facebook.com/StormShyn" }, i.a.createElement("span", null, i.a.createElement("img", { src: "asset/image/invite_friend_icon.png", height: "21" })), "Contact Us")), i.a.createElement("li", { className: "d-none" }, i.a.createElement("a", { onClick: function() { return e.click("invite_friends") }, className: "invite_friends" === this.props.currentMenu ? "active text-decoration-none px-2 py-3" : "text-decoration-none px-2 py-3" }, i.a.createElement("span", null, i.a.createElement("img", { src: "asset/image/invite_friend_icon.png", height: "21" })), "Invite Friends")))) } }]), t
            }(n.Component),
            h = a(7),
            _ = function(e) {
                function t(e) {
                    var a;
                    Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).service = chrome.extension.getBackgroundPage().getService2(), a.auth = chrome.extension.getBackgroundPage().getAuth(), a.changePasswordSubmit = a.changePasswordSubmit.bind(Object(d.a)(a)), a.changeHandler = a.changeHandler.bind(Object(d.a)(a)), a.deleteAccount = a.deleteAccount.bind(Object(d.a)(a)), a.state = { name: "", email: "", twitter: "", instagram: "", linkedin: "", personal_website: "", organization_name: "", organization_website: "", position: "", team_size: "", newsletter: !1, current_password: "", new_password: "", confirm_password: "", errors: {}, cpErrors: {}, profileChangedSuccess: !1, changePasswordSuccess: !1, profileProcess: !1, changePasswordProcess: !1 };
                    var n = JSON.parse(localStorage.getItem("qleary_user"));
                    return n && (a.state.name = n.name, a.state.email = n.email, a.state.twitter = n.twitter || "", a.state.linkedin = n.linkedin || "", a.state.instagram = n.instagram || "", a.state.personal_website = n.personal_website || "", a.state.organization_name = n.organization_name || "", a.state.organization_website = n.organization_website || "", a.state.position = n.position || "", a.state.team_size = n.team_size || "", a.state.newsletter = "1" === n.newsletter.toString()), a
                }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "profileSubmit",
                    value: function(e) {
                        e.preventDefault();
                        var t = this;
                        if (this.handleValidation()) {
                            this.setState({ profileProcess: !0 });
                            var a = new FormData;
                            a.append("name", this.state.name), a.append("email", this.state.email), a.append("twitter", this.state.twitter), a.append("linkedin", this.state.linkedin), a.append("instagram", this.state.instagram), a.append("personal_website", this.state.personal_website), a.append("organization_name", this.state.organization_name), a.append("organization_website", this.state.organization_website), a.append("position", this.state.position), a.append("team_size", this.state.team_size), a.append("newsletter", this.refs.newsletter.checked ? 1 : 0), this.service.post(this.service.version + "profile", a).then(function(e) {
                                if (e.success) {
                                    var a = t.auth.user();
                                    a.name = e.result.name, a.email = e.result.email, a.twitter = e.result.twitter, a.linkedin = e.result.linkedin, a.instagram = e.result.instagram, a.personal_website = e.result.personal_website, a.organization_name = e.result.organization_name, a.organization_website = e.result.organization_website, a.position = e.result.position, a.team_size = e.result.team_size, a.newsletter = e.result.newsletter, t.auth.setUser(a), t.setState({ profileChangedSuccess: !0, profileProcess: !1 }), setTimeout(function() { t.setState({ profileChangedSuccess: !1 }) }, 5e3)
                                }
                            }).catch(function(e) {
                                (e = JSON.parse(e)).hasOwnProperty("email") && t.setState({ errors: { email: e.email[0] } })
                            })
                        }
                    }
                }, {
                    key: "changePasswordSubmit",
                    value: function(e) {
                        e.preventDefault();
                        var t = !0,
                            a = {};
                        if (this.state.current_password || (a.current_password = "This field is required.", t = !1), this.state.password || (a.password = "This field is required.", t = !1), this.state.confirm_password ? this.state.confirm_password !== this.state.password && (a.confirm_password = "The password and confirm password should be the same.", t = !1) : (a.confirm_password = "This field is required.", t = !1), this.setState({ cpErrors: a }), t) {
                            this.setState({ changePasswordProcess: !0 });
                            var n = this,
                                i = new FormData;
                            i.append("current_password", this.current_password), i.append("new_password", this.password), i.append("confirm_password", this.confirm_password), this.service.post("admin/post-change-password", i).then(function(e) { e.success ? (n.setState({ current_password: "", password: "", confirm_password: "", changePasswordSuccess: !0 }), setTimeout(function() { n.setState({ changePasswordSuccess: !1 }) }, 5e3)) : alert(e.message), n.setState({ changePasswordProcess: !1 }) }).catch(function(e) { n.setState({ changePasswordProcess: !0 }) })
                        }
                    }
                }, {
                    key: "deleteAccount",
                    value: function() {
                        var e = this;
                        window.confirm("Are you sure you want to delete your account? This will delete all the data from the server. You will never be able to recover your data.") && ($(this.refs.delete_account).html("Removing Please wait..."), this.service.post(this.service.version + "profile/remove", new FormData).then(function(t) { e.auth.logout(), document.location.reload() }).catch(function(e) { console.log(e) }))
                    }
                }, {
                    key: "handleValidation",
                    value: function() {
                        var e = !0,
                            t = {};
                        return this.state.name.trim() || (t.name = "This field is required.", e = !1), this.state.twitter.trim() && (this.isValidUsername(this.state.twitter) || this.isUrlValid(this.state.twitter.trim()) || (t.twitter = "Please enter a valid url or username.", e = !1)), this.state.linkedin.trim() && (this.isValidUsername(this.state.linkedin) || this.isUrlValid(this.state.linkedin.trim()) || (t.linkedin = "Please enter a valid url or username.", e = !1)), this.state.instagram.trim() && (this.isValidUsername(this.state.instagram) || this.isUrlValid(this.state.instagram.trim()) || (t.instagram = "Please enter a valid url or username.", e = !1)), this.state.personal_website.trim() && (this.isUrlValid(this.state.personal_website.trim()) || (t.personal_website = "Please enter a valid url.", e = !1)), this.state.organization_name.trim() && (this.isUrlValid(this.state.organization_name.trim()) || (t.organization_name = "Please enter a valid url.", e = !1)), this.state.organization_website.trim() && (this.isUrlValid(this.state.organization_website.trim()) || (t.organization_website = "Please enter a valid url.", e = !1)), this.state.team_size && isNaN(Number(this.state.team_size)) && (t.team_size = "Team size must be a number..", e = !1), this.state.email ? this.isEmailValid(this.state.email) || (t.email = "Please enter a valid email address.", e = !1) : (t.email = "This field is required.", e = !1), this.setState({ errors: t }), e
                    }
                }, { key: "isEmailValid", value: function(e) { return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase()) } }, { key: "isValidUsername", value: function(e) { return /^[A-Za-z0-9_@./#&+-]*$/.test(e.trim()) } }, { key: "isUrlValid", value: function(e) { return !!new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$", "i").test(e) } }, {
                    key: "changeHandler",
                    value: function(e) {
                        var t = e.target.name;
                        this.setState(Object(h.a)({}, t, e.target.value))
                    }
                }, { key: "render", value: function() { return i.a.createElement("div", { className: "white_box animated fadeInUp" }, i.a.createElement("form", { method: "post", onSubmit: this.profileSubmit.bind(this) }, i.a.createElement("div", { class: "row" }, i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Name"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Name", type: "text", value: this.state.name, ref: "name", onChange: this.changeHandler, name: "name" }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.name)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Email"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Email", type: "text", ref: "email", value: this.state.email, name: "email", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.email)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Twitter"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Twitter", type: "text", value: this.state.twitter, name: "twitter", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.twitter)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Instagram"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Instagram", type: "text", value: this.state.instagram, name: "instagram", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.Instagram)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "LinkedIn"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "LinkedIn", type: "text", value: this.state.linkedin, name: "linkedin", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.linkedin)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Personal website"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Personal website", type: "text", ref: "personal_website", value: this.state.personal_website, name: "personal_website", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.personal_website)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Organization website"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Organization website", type: "text", ref: "organization_website", value: this.state.organization_website, name: "organization_website", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.organization_website)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Position"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Position", type: "text", ref: "position", value: this.state.position, name: "position", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.position)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("label", { class: "text" }, "Team size"), i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Team size", type: "text", ref: "team_size", value: this.state.team_size, name: "team_size", onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.errors.team_size)))), i.a.createElement("div", { class: "col-sm-12 pb-4" }, i.a.createElement("label", { class: "checkbox-inline text" }, i.a.createElement("input", { type: "checkbox", value: "1", className: "width-auto", ref: "newsletter", defaultChecked: this.state.newsletter, onChange: this.changeHandler }), "\xa0 Receive updates and more. We will never spam you, don't worry! ", this.state.newsletter)), this.state.profileChangedSuccess ? i.a.createElement("div", { class: "col-sm-12 mt-4" }, i.a.createElement("div", { class: "alert alert-success" }, i.a.createElement("strong", null, "Success!"), " Profile has been updated.")) : null, i.a.createElement("div", { class: "col-sm-12 mt-4 text-center" }, i.a.createElement("button", { class: "btn btn-primary kbd p-2 px-4 m-auto" }, this.state.profileProcess ? "Processing..." : "Save")))), i.a.createElement("form", { method: "post", onSubmit: this.changePasswordSubmit }, i.a.createElement("div", { class: "row" }, i.a.createElement("div", { class: "col-sm-12 pb-4 mt-5" }, i.a.createElement("h4", { class: "headingSec" }, "Change Password")), i.a.createElement("div", { class: "col-sm-12" }, i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Current Password", type: "password", ref: "current_password", name: "current_password", value: this.state.current_password, onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.cpErrors.current_password)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Password", type: "password", ref: "password", name: "password", value: this.state.password, onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.cpErrors.password)))), i.a.createElement("div", { class: "col-sm-6" }, i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { class: "form-control", placeholder: "Confirm Password", type: "password", ref: "confirm_password", name: "confirm_password", value: this.state.confirm_password, onChange: this.changeHandler }), i.a.createElement("span", { class: "text-danger" }, i.a.createElement("small", null, this.state.cpErrors.confirm_password)))), this.state.changePasswordSuccess ? i.a.createElement("div", { class: "col-sm-12 mt-4" }, i.a.createElement("div", { class: "alert alert-success" }, i.a.createElement("strong", null, "Success!"), " Password has been changed successful.")) : null, i.a.createElement("div", { class: "col-sm-12 mt-4 text-center" }, i.a.createElement("button", { class: "btn btn-primary kbd p-2 px-4 m-auto" }, this.state.changePasswordProcess ? "Processing..." : "Change")))), i.a.createElement("div", { class: "col-sm-12 mt-4 text-center" }, i.a.createElement("button", Object(h.a)({ class: "btn btn-danger kbd p-2 px-4 m-auto", ref: !0, onClick: this.deleteAccount }, "ref", "delete_account"), "Delete account"))) } }]), t
            }(n.Component),
            b = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).exportBoard = function() { BoardCtrl.exportData(a.state.id) }, a.createDuplicate = function() { BoardCtrl.copyBoard(a.state.id), a.props.refreshBoard() }, a.state = a.props.board, a.edit = a.edit.bind(Object(d.a)(a)), a.canShareBoard = "false" !== a.props.share, a.share = a.share.bind(Object(d.a)(a)), a.delete = a.delete.bind(Object(d.a)(a)), a.update = a.update.bind(Object(d.a)(a)), a.entry = chrome.extension.getBackgroundPage().getEntry(), a.board = chrome.extension.getBackgroundPage().getBoard(), a.state.entry_count = a.entry.getByBoard(a.state.id).length, a.state.renderBlock = !0, a.state.editForm = !1, a.changeHandler = a.changeHandler.bind(Object(d.a)(a)), a.selectBoard = a.selectBoard.bind(Object(d.a)(a)), a.makeFavorite = a.makeFavorite.bind(Object(d.a)(a)), a.tempBoard = a.tempBoard.bind(Object(d.a)(a)), a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "componentDidMount",
                    value: function() {
                        var e = this,
                            t = this;
                        "false" == localStorage.getItem("sync_board") ? localStorage.getItem("board_for_new_tab") == this.state.id && $(this.refs.make_favorite).prop("checked", !0) : 1 == this.state.is_favorite && $(this.refs.make_favorite).prop("checked", !0), this.$board = $(this.refs.dropable), this.$board.droppable({
                            drop: function(e, a) {
                                if (a.helper.attr("data-tabid")) {
                                    var n = t.board.first(t.state.id),
                                        i = currentSession[a.helper.attr("data-tabid")];
                                    n.column.length < 1 && n.column.push(t.board.createNewColumn(t.state.id, {})), t.entry.create({ board_id: t.state.id, column_id: n.column[0].id, title: i.title, url: i.url, favIconUrl: i.favIconUrl, sortable: t.entry.lastSortable(n.column[0].id) + 1 }), t.setState({ entry_count: t.state.entry_count + 1 }), a.helper.remove()
                                }
                            }
                        }), BoardCtrl.import(function() { e.setState({ entry_count: e.entry.getByBoard(e.state.id).length }) })
                    }
                }, {
                    key: "delete",
                    value: function() {
                        var e = this;
                        window.confirmBox.callback = function() { e.board.delete(e.state.id), e.setState({ renderBlock: !1 }), $("#confirm_box").modal("hide") }, window.confirmBox.init("Are you sure, you want to remove this board?")
                    }
                }, {
                    key: "edit",
                    value: function() {
                        var e = this;
                        this.setState({ editForm: !0 }, function() { $(e.refs.name).focus() })
                    }
                }, { key: "update", value: function() { this.setState({ editForm: !1 }), this.board.update(this.state.id, { name: this.state.name }), sync2() } }, { key: "share", value: function() { open_sharable_modal(this.state.id) } }, {
                    key: "changeHandler",
                    value: function(e) {
                        var t = e.target.name;
                        this.setState(Object(h.a)({}, t, e.target.value))
                    }
                }, { key: "selectBoard", value: function() { RSStorage.setCurrentBoardId(this.state.id) } }, { key: "makeFavorite", value: function() { this.board.removeFavorite(), "true" == localStorage.getItem("sync_board") ? this.board.updateById(this.state.id, { is_favorite: 1 }) : localStorage.setItem("board_for_new_tab", this.state.id), this.selectBoard() } }, { key: "tempBoard", value: function() { currentBoard.id = this.state.id } }, { key: "render", value: function() { return this.state.renderBlock ? i.a.createElement("div", { className: "col-md-4 col-sm-6 px-2 q-board-block dragable-element", id: this.state.id, ref: "dropable" }, !1 === this.state.editForm ? i.a.createElement("a", { href: "board-detail.html", className: "newfulllink board-select-btn dragable-element", onClick: this.selectBoard }) : null, i.a.createElement("div", { className: "white_box" }, i.a.createElement("div", { className: "media" }, i.a.createElement("div", { className: "media-body mbody100" }, !1 === this.state.editForm ? i.a.createElement("h4", { className: "mb-1 text-truncate" }, i.a.createElement("a", { href: "board-detail.html", className: "board-select-btn", onClick: this.selectBoard }, this.state.name.ucfirst() || "Unnamed board")) : i.a.createElement("div", null, i.a.createElement("form", { onSubmit: this.update }, i.a.createElement("input", { type: "text", autofocus: "true", value: this.state.name, className: "board-name-to-edit", onChange: this.changeHandler, name: "name", onBlur: this.update, ref: "name" }))), i.a.createElement("span", { className: "text-grey mb-3" }, this.state.entry_count + " ", this.state.entry_count > 1 ? "Entries" : "Entry"), i.a.createElement("div", { className: "clearfix" }), i.a.createElement("br", null), i.a.createElement("span", { className: "text-grey" }, this.state.created_at.toDate(), " ")), i.a.createElement("div", { className: "media-right" }, i.a.createElement("div", { className: "fancyradio", title: "Make it your new tab" }, i.a.createElement("input", { type: "radio", value: this.state.id, name: "make_favorite", ref: "make_favorite", onClick: this.makeFavorite }), i.a.createElement("span", null))), !1 === this.state.editForm ? i.a.createElement("div", { className: "media-right d-flex flex-column personalBoard_section align-content-center flex-wrap" }, i.a.createElement("div", { className: "dropdown dropleft" }, i.a.createElement("a", { className: "pointer", role: "button", id: "dropdownMenuLink", "data-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": "false" }, i.a.createElement("div", { className: "dotted_menu" }, i.a.createElement("span", null), i.a.createElement("span", null), i.a.createElement("span", null))), i.a.createElement("div", { className: "dropdown-menu board-action", "aria-labelledby": "dropdownMenuLink" }, i.a.createElement("a", { className: "dropdown-item pointer", onClick: this.createDuplicate }, i.a.createElement("img", { src: "asset/image/menu_duplicate_icon.png" }), "Duplicate"), i.a.createElement("hr", { className: "mt-1 mb-1" }), i.a.createElement("a", { className: "dropdown-item pointer", onClick: this.edit }, i.a.createElement("img", { src: "asset/image/menu_createnote_icon.png" }), "Edit"), this.canShareBoard ? i.a.createElement("a", { className: "dropdown-item pointer", onClick: this.share }, i.a.createElement("img", { src: "asset/image/menu_share_icon.png" }), "Share") : null, i.a.createElement("a", { className: "dropdown-item pointer", onClick: this.tempBoard, "data-toggle": "modal", "data-target": "#import_bookmark_modal" }, i.a.createElement("img", { src: "asset/image/import.png" }), "Import"), i.a.createElement("a", { className: "dropdown-item pointer", onClick: this.exportBoard }, i.a.createElement("img", { src: "asset/image/export.png" }), "Export"), i.a.createElement("hr", { className: "mt-1 mb-1" }), i.a.createElement("a", { className: "dropdown-item pointer", onClick: this.delete }, i.a.createElement("img", { src: "asset/image/delete.png" }), "Delete")))) : null))) : null } }]), t
            }(n.Component),
            v = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).board = chrome.extension.getBackgroundPage().getBoard(), a.create = a.create.bind(Object(d.a)(a)), a.openForm = a.openForm.bind(Object(d.a)(a)), a.changeHandler = a.changeHandler.bind(Object(d.a)(a)), a.state = { form: !1, boardname: "" }, a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "changeHandler",
                    value: function(e) {
                        var t = e.target.name;
                        this.setState(Object(h.a)({}, t, e.target.value))
                    }
                }, { key: "create", value: function(e) { e.preventDefault(), authController.canCreateMoreBoard() ? (this.board.create({ folder_id: this.props.folder_id, name: this.state.boardname }), this.setState({ form: !1, boardname: "" }), sync2(function() {}, !0), this.props.refreshBoard()) : alert("Please upgrade your plan to create more board.") } }, { key: "openForm", value: function() { this.setState({ form: !0 }) } }, { key: "render", value: function() { return i.a.createElement("div", { class: "col-md-4 col-sm-6 px-2 d-flex justify-content-strech", draggable: "false" }, 1 == this.state.form ? i.a.createElement("div", { class: "white_box w-100" }, i.a.createElement("div", { class: "media" }, i.a.createElement("form", { className: "w-100", onSubmit: this.create }, i.a.createElement("div", { class: "media-body" }, i.a.createElement("div", { class: "form-group" }, i.a.createElement("input", { type: "text", autofocus: "true", class: "form-control", placeholder: "Board Name", value: this.state.boardname, name: "boardname", onChange: this.changeHandler })), i.a.createElement("button", { type: "submit", class: "btn btn-default btn-block" }, "Create"))))) : i.a.createElement("div", { class: "white_box dotted_box w-100", onClick: this.openForm }, i.a.createElement("a", { class: "link-hover" }, i.a.createElement("div", { class: "media p-3 d-flex align-content-center" }, i.a.createElement("div", { class: "media-left align-self-center d-none" }, i.a.createElement("img", { src: "asset/image/plus_icon.png", width: "20" })), i.a.createElement("div", { class: "media-body text-center align-self-center p-3" }, i.a.createElement("img", { src: "asset/image/plus_icon.png", width: "20" }), " Create Board"))))) } }]), t
            }(n.Component),
            f = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).deleteFolder = a.deleteFolder.bind(Object(d.a)(a)), a.changeHandler = a.changeHandler.bind(Object(d.a)(a)), a.update = a.update.bind(Object(d.a)(a)), a.refreshBoard = a.refreshBoard.bind(Object(d.a)(a)), a.folder = chrome.extension.getBackgroundPage().getFolder(), a.board = chrome.extension.getBackgroundPage().getBoard(), a.service = chrome.extension.getBackgroundPage().getService(), a.state = a.props.item, a.state.removed = !1, a.state.boards = a.board.getByFolder(a.props.item.id), a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "deleteFolder",
                    value: function(e) {
                        var t = this;
                        window.confirmBox.callback = function() {
                            t.folder.delete(e), t.setState({ removed: !0 }), t.board.getByFolder(e).forEach(function(e) { t.board.delete(e.id) }), window.chrome.extension.getBackgroundPage().createContextMenu();
                            var a = new FormData;
                            a.append("ids", [e]), a.append("via", "extension"), t.service.post(t.service.version + "delete-folder", a).then(function(e) {}), $("#confirm_box").modal("hide")
                        }, window.confirmBox.init("Are you sure, you want to remove this folder?")
                    }
                }, {
                    key: "changeHandler",
                    value: function(e) {
                        var t = e.target.name;
                        this.setState(Object(h.a)({}, t, e.target.value))
                    }
                }, { key: "update", value: function(e) { this.folder.update(e, { title: this.state.title.trim(), sync: "true" }), this.setState({ title: this.state.title.trim() }), this.service.createOrUpdateFolder(e, function(e) {}) } }, { key: "refreshBoard", value: function() { this.setState({ boards: this.board.getByFolder(this.props.item.id) }) } }, {
                    key: "componentDidMount",
                    value: function() {
                        var e = this;
                        this.$node = $(this.refs.sortable), this.$node.sortable({
                            handle: ".dragable-element",
                            connectWith: ".boards-container",
                            placeholder: "ui-state-highlight col-sm-4 white_box",
                            start: function(e, t) { t.item.addClass("tilt"), tilt_direction(t.item) },
                            stop: function(t, a) {
                                a.item.removeClass("tilt");
                                var n = [];
                                $.map($(this).find(".q-board-block"), function(t) { n.push($(t).attr("id")), e.board.update($(t).attr("id"), { sortable: $(t).index() }) });
                                var i = new FormData;
                                i.append("boards", n), e.service.post(e.service.version + "board/change-order", i).then(function(e) { console.log("response"), console.log(e) }).catch(function(e) {})
                            },
                            receive: function(t, a) { e.board.update(a.item.attr("id"), { folder_id: e.state.id, sortable: a.item.index() }), e.service.createOrUpdateBoard(a.item.attr("id"), function(e) { console.log(e) }) }
                        })
                    }
                }, { key: "moveFolderUp", value: function(e) { this.folder.moveItemUp(e), this.serviceMove({ folderId: e, currentPosition: this.state.sortable, newPosition: --this.state.sortable, moveTo: "up" }), this.props.refresh() } }, { key: "moveFolderDown", value: function(e) { this.folder.moveItemDown(e), this.serviceMove({ folderId: e, currentPosition: this.state.sortable, newPosition: ++this.state.sortable, moveTo: "down" }), this.props.refresh() } }, {
                    key: "serviceMove",
                    value: function(e) {
                        var t = new FormData;
                        t.append("id", e.folderId), t.append("position", e.currentPosition), t.append("new_position", e.newPosition), this.service.post(this.service.version + "folder/move/".concat(e.moveTo), t, function(e) { console.log("response", e) })
                    }
                }, { key: "render", value: function() { var e = this; return !1 === this.state.removed ? i.a.createElement("div", { class: "row board-row " }, i.a.createElement("div", { class: "col-sm-12 media align-items-center my-3" }, i.a.createElement("div", { class: "media-left pr-2" }, i.a.createElement("img", { src: "asset/image/folder.png", height: "15" })), i.a.createElement("div", { class: "media-body" }, i.a.createElement("h4", { class: "media-body m-0" }, i.a.createElement("input", { type: "text", name: "title", value: this.state.title || "", onBlur: function() { return e.update(e.state.id) }, onChange: this.changeHandler, placeholder: "Unnamed Folder", className: "folder-name-editor" }))), i.a.createElement("div", { onClick: function() { return e.moveFolderUp(e.state.id) }, class: "media-right link-hover folder-move-up" }, i.a.createElement("img", { src: "asset/image/curve.png", alt: "move up", title: "Move up" })), i.a.createElement("div", { onClick: function() { return e.moveFolderDown(e.state.id) }, class: "media-right link-hover folder-move-down" }, i.a.createElement("img", { src: "asset/image/curve.png", alt: "move down", title: "Move down" })), i.a.createElement("div", { onClick: function() { return e.deleteFolder(e.state.id) }, class: "media-right link-hover" }, i.a.createElement("img", { src: "asset/image/delete.png" }))), i.a.createElement("div", { class: "col-md-12" }, i.a.createElement("div", { ref: "sortable", class: "row boards-container" }, this.state.boards.map(function(t) { return i.a.createElement(b, { key: "board-" + t.id, board: t, refreshBoard: e.refreshBoard }) }), i.a.createElement(v, { folder_id: this.state.id, refreshBoard: this.refreshBoard })))) : null } }]), t
            }(n.Component),
            E = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).addFolder = a.addFolder.bind(Object(d.a)(a)), a.folder = chrome.extension.getBackgroundPage().getFolder(), a.service = chrome.extension.getBackgroundPage().getService(), a.state = { folders: a.folder.get() }, a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "addFolder",
                    value: function() {
                        var e = this.folder.create({ title: "" });
                        this.setState({ folders: this.folder.get() }), this.service.createOrUpdateFolder(e.id, function(e) {})
                    }
                }, { key: "refreshFolder", value: function() { this.setState({ folders: this.folder.get() }) } }, { key: "render", value: function() { var e = this; return i.a.createElement("div", { className: "animated fadeInUp" }, this.state.folders.map(function(t, a) { return i.a.createElement(f, { key: "folder-" + t.id, item: t, refresh: e.refreshFolder.bind(e) }) }), i.a.createElement("div", { class: "row redsec" }, i.a.createElement("div", { class: "media align-items-center my-3 pointer fancyBtnBig" }, i.a.createElement("div", { class: "media-left pr-2" }, i.a.createElement("img", { src: "asset/image/plus_icon.png", height: "15" })), i.a.createElement("div", { class: "media-body" }, i.a.createElement("h4", { class: "m-0", onClick: this.addFolder }, "Add Folder"))))) } }]), t
            }(n.Component),
            y = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).toggerTheme = a.toggerTheme.bind(Object(d.a)(a)), a.saveSettings = a.saveSettings.bind(Object(d.a)(a)), a.toggerTabSetting = a.toggerTabSetting.bind(Object(d.a)(a)), a.toggerOpenTabsSetting = a.toggerOpenTabsSetting.bind(Object(d.a)(a)), a.service = chrome.extension.getBackgroundPage().getService(), a.board = chrome.extension.getBackgroundPage().getBoard(), a.state = { sync_board: "true" == localStorage.getItem("sync_board"), changeTheme: "true" == localStorage.getItem("changeThemeColor"), save_pinned_tabs: "true" == localStorage.getItem("save_pinned_tabs"), tab_status_on_save: "true" == localStorage.getItem("tab_status_on_save"), save_duplicate_url: "true" == localStorage.getItem("save_duplicate_url"), open_links_in_new_tabs: "true" == localStorage.getItem("open_links_in_new_tabs"), search_all_or_specific_board: "true" == localStorage.getItem("search_all_or_specific_board"), live_chat: "true" == localStorage.getItem("live_chat"), font_family: localStorage.getItem("font_family"), isLoggedIn: !auth.isLoggedIn() }, a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "toggerTheme",
                    value: function(e) {
                        if (!this.state.isLoggedIn) return !0 === e.target.checked ? e.target.checked = !1 : e.target.checked = !0, signup(), !1;
                        this.setState({ changeTheme: this.refs.changeTheme.checked }), this.refs.changeTheme.checked ? (document.body.classList.add("darktheme"), localStorage.setItem("changeThemeColor", "true")) : (document.body.classList.remove("darktheme"), localStorage.setItem("changeThemeColor", "false"))
                    }
                }, {
                    key: "toggerTabSetting",
                    value: function(e) {
                        if (!this.state.isLoggedIn) return !0 === e.target.checked ? e.target.checked = !1 : e.target.checked = !0, signup(), !1;
                        this.refs.tab_status_on_save.checked ? localStorage.setItem("tab_status_on_save", "true") : localStorage.setItem("tab_status_on_save", "false")
                    }
                }, {
                    key: "toggerOpenTabsSetting",
                    value: function(e) {
                        if (!this.state.isLoggedIn) return !0 === e.target.checked ? e.target.checked = !1 : e.target.checked = !0, signup(), !1;
                        localStorage.setItem("open_links_in_new_tabs", "false"), localStorage.setItem("search_all_or_specific_board", "false"), localStorage.setItem("save_duplicate_url", "false"), localStorage.setItem("save_pinned_tabs", "false"), this.refs.open_links_in_new_tabs.checked && localStorage.setItem("open_links_in_new_tabs", "true"), this.refs.search_all_or_specific_board.checked && localStorage.setItem("search_all_or_specific_board", "true"), this.saveSettings(), this.refs.sync_board.checked ? localStorage.setItem("sync_board", "true") : localStorage.setItem("sync_board", "false"), this.refs.save_duplicate_url.checked && localStorage.setItem("save_duplicate_url", "true"), this.refs.save_pinned_tabs.checked && localStorage.setItem("save_pinned_tabs", "true")
                    }
                }, {
                    key: "saveSettings",
                    value: function() {
                        var e = String(this.refs.sync_board.checked);
                        if (e !== localStorage.getItem("sync_board")) {
                            var t = new FormData,
                                a = this.board.default().id ? this.board.default().id : "";
                            t.append("sync_board", e), t.append("default_column", a), this.service.post(this.service.version + "settings", t).then(function(e) { console.log(e) })
                        }
                    }
                }, { key: "toggleChat", value: function(e) { $(".helpcrunch-iframe-wrapper").hide(), localStorage.setItem(e.target.name, "false"), !0 === e.target.checked && (localStorage.setItem(e.target.name, "true"), $(".helpcrunch-iframe-wrapper").show(), 0 === $(".helpcrunch-iframe-wrapper").length && BoardCtrl.helpCrunchCode()) } }, { key: "changeFontfamily", value: function(e) { $("body").removeClass("ff-open-sans ff-roboto, ff-cairo ff-hind-siliguri ff-noto ff-montserrat ff-lato ff-noto-jp ff-noto-kr"), localStorage.setItem("font_family", e.target.value), setFontFamily(), this.setState({ font_family: e.target.value }) } }, { key: "render", value: function() { return i.a.createElement("div", { className: "white_box animated fadeInUp" }, i.a.createElement("div", { class: "col-sm-12 pb-4" }, i.a.createElement("h4", { class: "headingSec" }, "Account Setting")), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("select", { class: "custom-select", onChange: this.changeFontfamily.bind(this), value: this.state.font_family }, i.a.createElement("option", { value: "ff-open-sans" }, "Default"), i.a.createElement("option", { value: "ff-cairo" }, "Cairo"), i.a.createElement("option", { value: "ff-hind-siliguri" }, "Hind Siliguri"), i.a.createElement("option", { value: "ff-lato" }, "Lato"), i.a.createElement("option", { value: "ff-montserrat" }, "Montserrat"), i.a.createElement("option", { value: "ff-noto" }, "Noto Sans TC"), i.a.createElement("option", { value: "ff-noto-jp" }, "Noto Sans JP"), i.a.createElement("option", { value: "ff-noto-kr" }, "Noto Sans KR"), i.a.createElement("option", { value: "ff-roboto" }, "Roboto "))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "live_chat", type: "checkbox", onClick: this.toggleChat, defaultChecked: this.state.live_chat }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry mb-0" }, "\xa0 Live Chat"))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "ff", ref: "changeTheme", type: "checkbox", onClick: this.toggerTheme, defaultChecked: this.state.changeTheme }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry mb-0" }, "\xa0 ", this.state.changeTheme ? "Change to light theme" : "Change to dark theme"))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "close_tab", ref: "tab_status_on_save", type: "checkbox", onClick: this.toggerTabSetting, defaultChecked: this.state.tab_status_on_save }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry  mb-0" }, " \xa0 Close tabs on save"))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "close_tab", ref: "open_links_in_new_tabs", type: "checkbox", onClick: this.toggerOpenTabsSetting, defaultChecked: this.state.open_links_in_new_tabs }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry mb-0" }, " \xa0 Open links in a new tab"))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "close_tab", ref: "search_all_or_specific_board", type: "checkbox", onClick: this.toggerOpenTabsSetting, defaultChecked: this.state.search_all_or_specific_board }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry mb-0" }, " \xa0 Search: All boards / specific board"))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "sync_board", ref: "sync_board", type: "checkbox", onClick: this.toggerOpenTabsSetting, defaultChecked: this.state.sync_board }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry mb-0" }, " \xa0 Sync primary board between devices"))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "save_duplicate_url", ref: "save_duplicate_url", type: "checkbox", onClick: this.toggerOpenTabsSetting, defaultChecked: this.state.save_duplicate_url }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry mb-0" }, " \xa0 Save duplicates"))), i.a.createElement("div", { class: "col-sm-12 pb-4 white_box border" }, i.a.createElement("div", { class: "d-flex" }, i.a.createElement("div", { class: "new_tab" }, i.a.createElement("input", { name: "save_pinned_tabs", ref: "save_pinned_tabs", type: "checkbox", onClick: this.toggerOpenTabsSetting, defaultChecked: this.state.save_pinned_tabs }), i.a.createElement("div", { class: "dots" })), i.a.createElement("p", { class: "flex-grow-1 line-height20 colorGry mb-0" }, " \xa0 Save pinned tabs")))) } }]), t
            }(n.Component),
            w = function(e) {
                function t() { return Object(c.a)(this, t), Object(o.a)(this, Object(m.a)(t).apply(this, arguments)) }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "render", value: function() { return i.a.createElement("div", { className: "card" }, i.a.createElement("div", { className: "card-body" }, i.a.createElement("div", { class: "col-sm-12 pb-4 mt-5" }, i.a.createElement("h4", { class: "text text-center" }, " Coming soon! ")))) } }]), t
            }(n.Component),
            k = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).board = chrome.extension.getBackgroundPage().getBoard(), a.state = { boards: a.board.get() }, a }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "test", value: function() { return i.a.createElement("div", { className: "row" }, this.state.boards.map(function(e) { return e.sharable_code ? i.a.createElement(b, { board: e }) : null })) } }, { key: "render", value: function() { return i.a.createElement("div", { className: "card" }, i.a.createElement("div", { className: "card-body" }, i.a.createElement("div", { class: "col-sm-12 pb-4 mt-5" }, i.a.createElement("h4", { class: "text-center text" }, " Coming soon! ")))) } }]), t
            }(n.Component),
            x = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).state = { sharedWithMe: [], sharedByMe: [] }, a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "componentDidMount",
                    value: function() {
                        if (!auth.isLoggedIn()) {
                            var e = auth.user().id,
                                t = [];
                            users.get().forEach(function(e) { t = t.concat(e.board_ids) }), this.setState({ sharedByMe: boardController.get().filter(function(a) { return -1 !== t.indexOf(a.id) && a.user_id === e }), sharedWithMe: boardController.get().filter(function(t) { return t.user_id && t.user_id !== e }) })
                        }
                    }
                }, { key: "render", value: function() { return i.a.createElement("div", { className: "animated fadeInUp" }, i.a.createElement("div", { class: "row board-row ", ref: "sortable" }, i.a.createElement("div", { class: "col-sm-12 media align-items-center my-3" }, i.a.createElement("div", { class: "media-left pr-2" }, i.a.createElement("img", { src: "asset/image/folder.png", alt: "folder", height: "15" })), i.a.createElement("div", { class: "media-body" }, i.a.createElement("h4", { class: "media-body m-0" }, "Shared With Me"))), this.state.sharedWithMe.length < 1 ? i.a.createElement("div", { class: "col-sm-12 pb-4 mt-5 text-center mb-5" }, i.a.createElement("a", { href: "https://help.qlearly.com/v2/how-to-privately-share-boards", target: "_blank", className: "link-hover text", rel: "noopener noreferrer" }, i.a.createElement("h4", null, "No board has been shared with you yet."))) : this.state.sharedWithMe.map(function(e) { return i.a.createElement(b, { board: e, share: "false" }) })), i.a.createElement("div", { class: "row board-row ", ref: "sortable" }, i.a.createElement("div", { class: "col-sm-12 media align-items-center my-3" }, i.a.createElement("div", { class: "media-left pr-2" }, i.a.createElement("img", { src: "asset/image/folder.png", alt: "folder", height: "15" })), i.a.createElement("div", { class: "media-body" }, i.a.createElement("h4", { class: "media-body m-0" }, "Shared By Me"))), this.state.sharedByMe.length < 1 ? i.a.createElement("div", { class: "col-sm-12 pb-4 mt-5 text-center mb-5" }, i.a.createElement("a", { href: "https://help.qlearly.com/v2/how-to-privately-share-boards", rel: "noopener noreferrer", target: "_blank", className: "link-hover text" }, i.a.createElement("h4", null, "You have not shared any board."))) : this.state.sharedByMe.map(function(e) { return i.a.createElement(b, { board: e }) }))) } }]), t
            }(n.Component),
            j = function(e) {
                function t() { return Object(c.a)(this, t), Object(o.a)(this, Object(m.a)(t).apply(this, arguments)) }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "render", value: function() { return i.a.createElement("button", { type: "button", class: "button button--accent-outline" }, "Current Plan") } }]), t
            }(n.Component);
        var S = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).tax = 0, a.state = { handler: null, currentPlan: null, discountAmount: 0, validatingPromode: !1, promocode_err: "", promocode_applied_msg: "", plan: "bignner", duration: "lifetime", plans: [{ title: "Biginner", monthly: 0, yearly: 0, lifetime: 0, discount: 0 }], bignner: { monthly: 0, yearly: 0, lifetime: 0, discount: 0 }, premium: { monthly: 5, yearly: 36, lifetime: 49, discount: 0 }, business: { monthly: 20, yearly: 180, lifetime: 199, discount: 0 }, enterprise: { monthly: 60, yearly: 540, lifetime: 186, discount: 0 }, pro: { monthly: 10, yearly: 15, lifetime: 29, discount: 0 }, unlimited: { enable: !0, monthly: 10, yearly: 20, lifetime: 39, discount: 0 } }, a.service = chrome.extension.getBackgroundPage().getService(), a.auth = chrome.extension.getBackgroundPage().getAuth(), a.upgrade = a.upgrade.bind(Object(d.a)(a)), a.cancelSubscription = a.cancelSubscription.bind(Object(d.a)(a)), a.duration = a.duration.bind(Object(d.a)(a)), a.applyPromocode = a.applyPromocode.bind(Object(d.a)(a)), a.upgradePlan = a.upgradePlan.bind(Object(d.a)(a)), a.getPlan = a.getPlan.bind(Object(d.a)(a)), a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "componentDidMount",
                    value: function() {
                        var e = this,
                            t = this.auth.subscription();
                        if (!(t && this.setState({ plan: (t.plan || "").toLowerCase(), currentPlan: t }), this.service.get(this.service.version + "current-subscription").then(function(t) { e.setState({ currentPlan: t.data }), e.auth.setSubscription(t.data) }), !document.getElementById("stripe_script"))) {
                            var a = document.createElement("script");
                            a.src = chrome.extension.getURL("asset/js/conffeti.min.js");
                            var n = document.createElement("script");
                            n.src = "https://checkout.stripe.com/checkout.js", n.async = !0, n.id = "stripe_script", n.onload = function() { e.handler = StripeCheckout.configure({ key: "pk_live_dEhrYLnZEnUfeJj0kiRoFmoc", image: "https://qlearly.com/extension_web/img/Qlearlylogo.png", locale: "auto", token: function(t) { t.id ? e.upgradePlan(t) : alert("Oops! Something went wrong") } }) }, document.body.appendChild(n), document.body.appendChild(a)
                        }
                    }
                }, {
                    key: "upgradePlan",
                    value: function(e) {
                        $(".big-centered-loader").show();
                        var t = this,
                            a = {};
                        a.token = e.id, a.plan = t.state.plan, a.duration = t.state.duration, a.promocode = t.refs.promocode.value, a.discount = t.state.discountAmount, service.post(t.service.version + "pay", a).then(function(e) { $(".big-centered-loader").hide(), t.auth.setSubscription(e.data), t.setState({ currentPlan: e.data }), t.resetPromocode.call(t), new Confetti({ width: window.innerWidth, height: window.innerHeight, length: 220, duration: 8e3 }), setTimeout(function() { $("canvas").remove() }, 8e3) }).catch(function(e) { t.resetPromocode.call(t), $(".big-centered-loader").hide() })
                    }
                }, { key: "addTax", value: function(e) { return parseFloat(parseFloat(e + e * this.tax / 100).toFixed(2)) } }, { key: "selectPlan", value: function(e) { this.setState({ plan: e }) } }, { key: "selectDuration", value: function(e) { this.setState({ duration: e }), this.resetPromocode.call(this) } }, {
                    key: "upgrade",
                    value: function(e) {
                        var t = this;
                        this.setState({ plan: e, discountAmount: this.state[e].discount }, function() {
                            if (t.state[e][t.state.duration] <= 0) {
                                var a = t.getPayAmount(e);
                                if (!t.handler) return void alert("Oops! Please wait library is loading");
                                a <= 0 && "lifetime" === t.state.duration ? t.upgradePlan({}) : t.handler.open({ name: e.ucfirst(), description: t.state.duration.ucfirst() + " Plan", amount: t.addTax(100 * a) })
                            }
                        })
                    }
                }, {
                    key: "cancelSubscription",
                    value: function() {
                        this.setState({ currentPlan: null });
                        var e = new FormData;
                        this.service.post(this.service.version + "cancel-subscription", e).then(function(e) { $(".loading").hide() }).catch(function(e) {})
                    }
                }, { key: "planContent", value: function() { if (!this.state.currentPlan) return "Your current plan is the Beginner plan"; var e = new Date; return this.state.currentPlan.expire_at && (e = new Date(this.state.currentPlan.expire_at)), i.a.createElement("span", null, "Your current plan is the ", i.a.createElement("b", null, this.state.currentPlan.plan, " "), " plan. It will renew on ", ["January", "Feburary", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"][e.getMonth()], ", ", e.getDate(), " ", e.getFullYear()) } }, { key: "duration", value: function() { return "monthly" != this.state.duration ? "month" : "yearly" != this.state.duration ? "year" : "lifetime" } }, {
                    key: "applyPromocode",
                    value: function() {
                        var e = this;
                        if (this.refs.promocode.value) {
                            this.setState({ validatingPromode: !0, promocode_err: "", promocode_applied_msg: "" });
                            var t = new FormData;
                            t.append("promocode", this.refs.promocode.value), t.append("duration", this.state.duration), this.service.post(this.service.version + "validate-promocode", t).then(function(t) { console.log("response", t), e.setState({ validatingPromode: !1 }), !1 === t.success ? e.setState({ promocode_err: t.msg }) : (e.state.bignner.discount = t.data.bignner_amount, e.state.business.discount = t.data.business_amount, e.state.premium.discount = t.data.premium_amount, e.state.pro.discount = t.data.pro_amount, e.state.unlimited.discount = t.data.unlimited_amount, e.setState({ promocode_applied_msg: t.msg, premium: e.state.premium, business: e.state.business, bignner: e.state.bignner, pro: e.state.pro, unlimited: e.state.unlimited })) })
                        } else e.setState({ promocode_err: "Please enter the promocode", promocode_applied_msg: "" })
                    }
                }, { key: "resetPromocode", value: function() { this.state.bignner.discount = 0, this.state.business.discount = 0, this.state.premium.discount = 0, this.state.pro.discount = 0, this.state.unlimited.discount = 0, this.refs.promocode.value = "", this.setState({ validatingPromode: !1, promocode_err: "", promocode_applied_msg: "", discountAmount: 0, premium: this.state.premium, business: this.state.business, bignner: this.state.bignner, pro: this.state.pro, unlimited: this.state.unlimited }) } }, { key: "getPayAmount", value: function(e) { var t = this.state[e][this.state.duration] - this.state[e].discount; return "lifetime" === this.state.duration && t > 0 && t < .5 && (t = .5), parseFloat(parseFloat(t).toFixed(2)) } }, { key: "getPlan", value: function() { return this.state.currentPlan ? (console.log(this.state.currentPlan.plan), (this.state.currentPlan.plan || "").toLowerCase()) : "bignner" } }, { key: "render", value: function() { var e = this; return i.a.createElement("div", { class: "white_box row mb-5 animated fadeInUp" }, i.a.createElement("div", { class: "border col-sm-5 p-3 text-muted" }, this.planContent()), i.a.createElement("div", { class: "col-sm-7 text-muted border-right border-top border-bottom" }, i.a.createElement("div", { class: "row" }, i.a.createElement("div", { class: "col-12 p-3 d-flex border-bottom" }, i.a.createElement("label", { class: "d-flex align-items-center link-hover", onClick: function() { return e.selectDuration("yearly") } }, i.a.createElement("span", { class: "radioinput" }, i.a.createElement("input", { type: "radio", name: "subscription", defaultChecked: "yearly" == this.state.duration }), i.a.createElement("span", null)), " \xa0\xa0 Yearly")), i.a.createElement("div", { class: "col-12 p-3 d-flex" }, i.a.createElement("label", { class: "d-flex align-items-center link-hover", onClick: function() { return e.selectDuration("lifetime") } }, i.a.createElement("span", { class: "radioinput" }, i.a.createElement("input", { type: "radio", name: "subscription", defaultChecked: "lifetime" == this.state.duration }), i.a.createElement("span", null)), " \xa0\xa0 Limited Lifetime Plan")))), i.a.createElement("div", { className: "lifetime" == this.state.duration ? "col-sm-12 px-0 lifetime" : "col-sm-12 px-0" }, i.a.createElement("div", { class: "pricing-02__cards_container" }, i.a.createElement("ul", { class: "pricing-02__cards_list d-flex" }, i.a.createElement("li", { className: "bignner" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2" : "pricing-02__card_box flex-grow-1 mt-4 mx-2", onClick: function() { return e.selectPlan("bignner") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/chiken.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "30 Days Trial"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab", "data-index": "yearly-price-1", "data-group": "my-pricing-group-2" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, this.getPayAmount("bignner")), i.a.createElement("div", { class: "pricing-02__period width-50" }, "/", this.duration()))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Bookmarks"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Save an unlimited amount of tabs when browsing around the web!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "5 Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, " Share boards and collaborate with up to 5 teammates."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "10 Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by organizing them by boards. You can create up to 10."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Auto Sync"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Sync your bookmarks across multiple devices. Mobile browsers included!")))), i.a.createElement("div", { class: "pricing-02__card_button" }, this.state.currentPlan ? "bignner" === this.getPlan() ? i.a.createElement(j, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("bignner") } }, "Current Plan") : i.a.createElement(j, null)))), i.a.createElement("li", { className: "pro" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2" : "pricing-02__card_box flex-grow-1 mt-4 mx-2", onClick: function() { return e.selectPlan("pro") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/imac.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Pro"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab", "data-index": "yearly-price-1", "data-group": "my-pricing-group-2" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, this.getPayAmount("pro")), i.a.createElement("div", { class: "pricing-02__period" }, "/", this.duration()))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Bookmarks"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Save an unlimited amount of tabs when browsing around the web!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "5 Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, " Share boards and collaborate with up to 5 teammates."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "10 Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by organizing them by boards. You can create up to 10. "))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Auto Sync"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Sync your bookmarks across multiple devices. Mobile browsers included!")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "pro" === this.getPlan() ? i.a.createElement(j, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("pro") } }, "Current Plan")))), i.a.createElement("li", { className: "unlimited" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2" : "pricing-02__card_box flex-grow-1 mt-4 mx-2", onClick: function() { return e.selectPlan("unlimited") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/case.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Unlimited"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab", "data-index": "yearly-price-1", "data-group": "my-pricing-group-2" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, this.getPayAmount("unlimited")), i.a.createElement("div", { class: "pricing-02__period" }, "/", this.duration()))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Bookmarks"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Save an unlimited amount of tabs when browsing around the web!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Working with a big team? With our unlimited plan, you can share boards and collaborate with an unlimited amount of teammates."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by using different boards. Create Unlimited boards with our Unlimited Plan."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Auto Sync"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Sync your bookmarks across multiple devices. Mobile browsers included!")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "unlimited" === this.getPlan() ? i.a.createElement(j, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("unlimited") } }, "Current Plan")))), i.a.createElement("li", { className: "business" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2  d-none" : "pricing-02__card_box flex-grow-1 mt-4 mx-2  d-none", onClick: function() { return e.selectPlan("business") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/case.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Business"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab", "data-index": "yearly-price-1", "data-group": "my-pricing-group-2" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, this.getPayAmount("business")), i.a.createElement("div", { class: "pricing-02__period" }, "/", this.duration()))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "All features"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Access all the features available on Qlearly. Including Device Syncing and No Ads, ever!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "15 Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "You can have up to 15 teammates join your boards. They won't need to upgrade, just have them register and invite them!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by using different boards. Create Unlimited boards with our business plan."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Priority Support"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "We are always here to help! You can expect to hear back from us within 24 hours.")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "business" === this.getPlan() ? i.a.createElement(j, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("business") } }, "Current Plan")))), i.a.createElement("li", { className: "enterprise" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2 d-none" : "pricing-02__card_box flex-grow-1 mt-4 mx-2  d-none", onClick: function() { return e.selectPlan("enterprise") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/building.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Enterprise"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, "monthly" == this.state.duration ? this.state.enterprise.monthly : this.state.enterprise.yearly), i.a.createElement("div", { class: "pricing-02__period" }, "/", "monthly" == this.state.duration ? "month" : "year"))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "All features"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Access all the features available on Qlearly. Including Device Syncing and No Ads, ever!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Working with a big team? Get access to unlimited teammates with our enterprise plan. You will only be charged for one user!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by using different boards. With our Enterprise plan, you can invite an unlimited amount of users to your boards."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Priority Support"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "We are always here to help! You can expect to hear back from us within 24 hours.")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "enterprise" === this.getPlan() ? i.a.createElement(j, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("enterprise") } }, "Current Plan"))))))), i.a.createElement("div", { class: "border col-sm-12 mt-4 p-3 text-muted " }, i.a.createElement("div", { className: "row align-items-start" }, i.a.createElement("div", { class: "text-center col-lg-4 py-3" }, i.a.createElement("div", { class: "d-flex align-items-center justify-content-center" }, i.a.createElement("input", { type: "text", name: "promocode", ref: "promocode", id: "promocode", class: "form-control mr-2 form-control-lg", placeholder: "Promocode" }), this.state.promocode_applied_msg ? i.a.createElement("button", { class: "btn btn-primary", onClick: this.resetPromocode.bind(this) }, "X") : this.state.validatingPromode ? i.a.createElement("button", { class: "btn btn-primary btn-lg" }, "Validating...") : i.a.createElement("button", { class: "btn btn-primary btn-lg", onClick: function() { return e.applyPromocode() } }, "Apply")), this.state.promocode_applied_msg ? i.a.createElement("label", { className: "text-success" }, this.state.promocode_applied_msg) : null, this.state.promocode_err ? i.a.createElement("label", { className: "text-danger" }, this.state.promocode_err) : null), i.a.createElement("div", { className: "text-center col-lg-4 py-3" }, i.a.createElement("a", { href: "https://gumroad.com/guillaumeb", target: "_blank", class: "btn btn-warning btn-lg btn-block d-flex justify-content-center" }, "Check out with \xa0", i.a.createElement("img", { src: "/asset/image/paypal.png", height: "19" }))), i.a.createElement("div", { className: "text-center col-lg-4 py-3" }, this.state.currentPlan ? i.a.createElement("button", { class: "btn btn-primary btn-lg btn-block", onClick: this.cancelSubscription }, "Cancel Subscription") : i.a.createElement("button", { class: "btn btn-primary btn-lg btn-block", onClick: function() { return e.upgrade(e.state.plan) } }, "Current Plan"))))) } }]), t
            }(n.Component),
            P = function(e) {
                function t() { return Object(c.a)(this, t), Object(o.a)(this, Object(m.a)(t).apply(this, arguments)) }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "render", value: function() { return i.a.createElement("div", { className: "card" }, i.a.createElement("div", { className: "card-body" }, i.a.createElement("div", { class: "col-sm-12 pb-4 mt-5" }, i.a.createElement("h4", { class: "text text-center" }, " Coming soon! ")))) } }]), t
            }(n.Component),
            C = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).service = chrome.extension.getBackgroundPage().getService(), a.page = 1, a.state = { backups: [], moreRecords: !1, restoring: !1, manualBackup: !1, uploadBackup: !1 }, a }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "componentDidMount", value: function() { this.getData() } }, {
                    key: "getData",
                    value: function() {
                        var e = this;
                        $(".big-centered-loader").show(), this.service.get(this.service.version + "backup?page=" + this.page).then(function(t) { $(".big-centered-loader").hide(), console.log("respponse", t), e.page++, e.setState({ backups: e.state.backups.concat(t.data), moreRecords: e.page < t.last_page }) })
                    }
                }, {
                    key: "restore",
                    value: function(e) {
                        var t = this;
                        this.state.restoring || (window.confirmBox.callback = function(a) {
                            $("#confirm_box").modal("hide");
                            var n = new FormData;
                            n.append("file", window.backupfile), n.append("type", "cancel" == a ? "merging" : "restore"), t.setState({ restoring: e }), t.service.post(t.service.version + "backup/".concat(e, "/restore"), n).then(function(e) {
                                if (console.log("respponse", e), e.success) return board.saveRemoved([]), entry.saveRemoved([]), sync2(function() { t.setState({ restoring: !1 }) }, !0, { url: t.service.version + "auth/sync" }), void alert(e.message);
                                alert(e.message)
                            })
                        }, window.confirmBox.cancel = window.confirmBox.callback, window.confirmBox.init("Please choose an option to restore", "asset/image/backup2.png", { button_1_text: "Restore to Backup", button_2_text: "Merging" }))
                    }
                }, {
                    key: "createBackup",
                    value: function() {
                        var e = this;
                        this.state.manualBackup || (this.setState({ manualBackup: !0 }), this.service.post(this.service.version + "backup", new FormData).then(function(t) {
                            if (t.success) return e.setState({ backups: [] }), e.page = 1, e.getData(), alert(t.message), void e.setState({ manualBackup: !1 });
                            alert(t.message)
                        }))
                    }
                }, {
                    key: "uploadBackup",
                    value: function(e) {
                        var t = this;
                        this.state.uploadBackup || (window.backupfile = e.target.files[0], window.confirmBox.callback = function(e) {
                            var a = new FormData;
                            a.append("file", window.backupfile), a.append("type", "cancel" === e ? "merging" : "restore"), $(".big-centered-loader").show(), t.service.post(t.service.version + "backup-restore", a).then(function(e) { e.success ? sync2(function() { $(".big-centered-loader").hide(), alert(e.message) }, !0, { url: t.service.version + "auth/sync" }) : ($(".big-centered-loader").hide(), alert(e.message)) })
                        }, window.confirmBox.cancel = window.confirmBox.callback, window.confirmBox.init("Please choose an option to restore", "asset/image/backup2.png", { button_1_text: "Restore to Backup", button_2_text: "Merging" }))
                    }
                }, { key: "render", value: function() { var e = this; return i.a.createElement("div", { className: "animated fadeInUp" }, i.a.createElement("div", { class: "row board-row " }, i.a.createElement("div", { class: "col-sm-12 media align-items-center my-3" }, i.a.createElement("div", { class: "media-left pr-2" }, i.a.createElement("img", { src: "asset/image/backup2.png", height: "21" })), i.a.createElement("div", { class: "media-body" }, i.a.createElement("button", { class: "btn btn-primary btn-sm mb-2 ml-2 float-right", disabled: this.state.manualBackup, onClick: this.createBackup.bind(this) }, this.state.manualBackup ? "Wait..." : "Create Backup"), i.a.createElement("button", { class: "btn btn-danger btn-sm mb-2 ml-2 float-right custom-select-file", disabled: this.state.uploadBackup }, i.a.createElement("input", { type: "file", name: "upload_backup", onChange: this.uploadBackup.bind(this) }), this.state.uploadBackup ? "Wait..." : "Upload Backup"), i.a.createElement("h4", { class: "media-body m-0" }, "Backup Management"))), i.a.createElement("div", { class: "col-md-12 mb-5" }, i.a.createElement("div", { class: "card px-3 backup-m-card" }, i.a.createElement("table", { className: "table table-striped" }, i.a.createElement("thead", null, i.a.createElement("tr", null, i.a.createElement("th", null, "#"), i.a.createElement("th", null, "Size"), i.a.createElement("th", null, "Active"), i.a.createElement("th", null, "Backup At"), i.a.createElement("th", { className: "text-center" }, "Action"))), i.a.createElement("tbody", null, this.state.backups.map(function(t, a) { return i.a.createElement("tr", null, i.a.createElement("td", null, ++a), i.a.createElement("td", null, t.size), i.a.createElement("td", null, t.available), i.a.createElement("td", null, t.created_at), i.a.createElement("td", { className: "text-center" }, "Yes" === t.available ? i.a.createElement(i.a.Fragment, null, i.a.createElement("a", { target: "_blank", class: "btn btn-primary btn-sm mb-2", href: WEB_URL + "/x/download-backup/" + t.unique_id }, "Download"), i.a.createElement("button", { class: "btn btn-danger btn-sm mb-2 ml-2", disabled: e.state.restoring == t.unique_id, onClick: function() { return e.restore(t.unique_id) } }, e.state.restoring === t.unique_id ? "Restoring..." : "Restore")) : null)) }), this.state.backups.length < 1 ? i.a.createElement("tr", null, i.a.createElement("td", { colSpan: "5", className: "text-center" }, "There are no backups yet. Click the button below to create your first backup.")) : null))), this.state.moreRecords ? i.a.createElement("div", { className: "row " }, i.a.createElement("div", { className: "col-md-12 text-center py-5" }, i.a.createElement("button", { class: "btn btn-primary btn-sm", onClick: function() { return e.getData() } }, "Load More"))) : null))) } }]), t
            }(n.Component),
            O = function(e) {
                function t() { return Object(c.a)(this, t), Object(o.a)(this, Object(m.a)(t).apply(this, arguments)) }
                return Object(u.a)(t, e), Object(l.a)(t, [{ key: "render", value: function() { return i.a.createElement("button", { type: "button", class: "button button--accent-outline" }, "Current Plan") } }]), t
            }(n.Component);
        var B = function(e) {
                function t(e) { var a; return Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).tax = 0, a.state = { handler: null, currentPlan: null, discountAmount: 0, validatingPromode: !1, promocode_err: "", promocode_applied_msg: "", plan: "bignner", duration: "lifetime", plans: [{ title: "Biginner", monthly: 0, yearly: 0, lifetime: 0, discount: 0 }], bignner: { monthly: 0, yearly: 0, lifetime: 0, discount: 0 }, premium: { monthly: 5, yearly: 36, lifetime: 49, discount: 0 }, business: { monthly: 20, yearly: 180, lifetime: 199, discount: 0 }, enterprise: { monthly: 60, yearly: 540, lifetime: 186, discount: 0 }, pro: { monthly: 10, yearly: 15, lifetime: 29, discount: 0 }, unlimited: { enable: !0, monthly: 10, yearly: 20, lifetime: 39, discount: 0 } }, a.service = chrome.extension.getBackgroundPage().getService(), a.auth = chrome.extension.getBackgroundPage().getAuth(), a.upgrade = a.upgrade.bind(Object(d.a)(a)), a.cancelSubscription = a.cancelSubscription.bind(Object(d.a)(a)), a.duration = a.duration.bind(Object(d.a)(a)), a.applyPromocode = a.applyPromocode.bind(Object(d.a)(a)), a.upgradePlan = a.upgradePlan.bind(Object(d.a)(a)), a.getPlan = a.getPlan.bind(Object(d.a)(a)), setTimeout(function() { $("#login_modal").modal({ backdrop: "static", keyboard: !1 }) }, 1e3), a }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "componentDidMount",
                    value: function() {
                        var e = this,
                            t = this.auth.subscription();
                        if (t && this.setState({ plan: (t.plan || "").toLowerCase(), currentPlan: t }), this.service.get(this.service.version + "current-subscription").then(function(t) { e.setState({ currentPlan: t.data }), e.auth.setSubscription(t.data) }), !document.getElementById("stripe_script")) {
                            var a = document.createElement("script");
                            a.src = chrome.extension.getURL("asset/js/conffeti.min.js");
                            var n = document.createElement("script");
                            n.src = "https://checkout.stripe.com/checkout.js", n.async = !0, n.id = "stripe_script", n.onload = function() { e.handler = StripeCheckout.configure({ key: "pk_live_dEhrYLnZEnUfeJj0kiRoFmoc", image: "https://qlearly.com/extension_web/img/Qlearlylogo.png", locale: "auto", token: function(t) { t.id ? e.upgradePlan(t) : alert("Oops! Something went wrong") } }) }, document.body.appendChild(n), document.body.appendChild(a)
                        }
                    }
                }, {
                    key: "upgradePlan",
                    value: function(e) {
                        $(".big-centered-loader").show();
                        var t = this,
                            a = {};
                        a.token = e.id, a.plan = t.state.plan, a.duration = t.state.duration, a.promocode = t.refs.promocode.value, a.discount = t.state.discountAmount, service.post(t.service.version + "pay", a).then(function(e) { $(".big-centered-loader").hide(), t.auth.setSubscription(e.data), t.setState({ currentPlan: e.data }), t.resetPromocode.call(t), new Confetti({ width: window.innerWidth, height: window.innerHeight, length: 220, duration: 8e3 }), setTimeout(function() { $("canvas").remove(), document.location.href = chrome.extension.getURL("index.html") }, 7e3) }).catch(function(e) { t.resetPromocode.call(t), $(".big-centered-loader").hide() })
                    }
                }, { key: "addTax", value: function(e) { return parseFloat(parseFloat(e + e * this.tax / 100).toFixed(2)) } }, { key: "selectPlan", value: function(e) { this.setState({ plan: e }) } }, { key: "selectDuration", value: function(e) { this.setState({ duration: e }), this.resetPromocode.call(this) } }, {
                    key: "upgrade",
                    value: function(e) {
                        !this.auth.isLoggedIn() || $("#login_modal").modal({ backdrop: "static", keyboard: !1 });
                        var t = this;
                        this.setState({ plan: e, discountAmount: this.state[e].discount }, function() {
                            if (t.state[e][t.state.duration] >= 0) {
                                var a = t.getPayAmount(e);
                                if (!t.handler) return void alert("Oops! Please wait library is loading");
                                a >= 0 && "lifetime" === t.state.duration ? t.upgradePlan({}) : t.handler.open({ name: e.ucfirst(), description: t.state.duration.ucfirst() + " Plan", amount: t.addTax(100 * a) })
                            }
                        })
                    }
                }, {
                    key: "cancelSubscription",
                    value: function() {
                        this.setState({ currentPlan: null });
                        var e = new FormData;
                        this.service.post(this.service.version + "cancel-subscription", e).then(function(e) { $(".loading").hide() }).catch(function(e) {})
                    }
                }, { key: "duration", value: function() { return "monthly" == this.state.duration ? "month" : "yearly" == this.state.duration ? "year" : "lifetime" } }, {
                    key: "applyPromocode",
                    value: function() {
                        var e = this;
                        if (this.refs.promocode.value) {
                            this.setState({ validatingPromode: !0, promocode_err: "", promocode_applied_msg: "" });
                            var t = new FormData;
                            t.append("promocode", this.refs.promocode.value), t.append("duration", this.state.duration), this.service.post(this.service.version + "validate-promocode", t).then(function(t) { console.log("response", t), e.setState({ validatingPromode: !1 }), !1 === t.success ? e.setState({ promocode_err: t.msg }) : (e.state.bignner.discount = t.data.bignner_amount, e.state.business.discount = t.data.business_amount, e.state.premium.discount = t.data.premium_amount, e.state.pro.discount = t.data.pro_amount, e.state.unlimited.discount = t.data.unlimited_amount, e.setState({ promocode_applied_msg: t.msg, premium: e.state.premium, business: e.state.business, bignner: e.state.bignner, pro: e.state.pro, unlimited: e.state.unlimited })) })
                        } else e.setState({ promocode_err: "Please enter the promocode", promocode_applied_msg: "" })
                    }
                }, { key: "resetPromocode", value: function() { this.state.bignner.discount = 0, this.state.business.discount = 0, this.state.premium.discount = 0, this.state.pro.discount = 0, this.state.unlimited.discount = 0, this.refs.promocode.value = "", this.setState({ validatingPromode: !1, promocode_err: "", promocode_applied_msg: "", discountAmount: 0, premium: this.state.premium, business: this.state.business, bignner: this.state.bignner, pro: this.state.pro, unlimited: this.state.unlimited }) } }, { key: "getPayAmount", value: function(e) { var t = this.state[e][this.state.duration] - this.state[e].discount; return "lifetime" === this.state.duration && t > 0 && t < .5 && (t = .5), parseFloat(parseFloat(t).toFixed(2)) } }, { key: "getPlan", value: function() { return this.state.currentPlan ? (console.log(this.state.currentPlan.plan), (this.state.currentPlan.plan || "").toLowerCase()) : "bignner" } }, { key: "getTitle", value: function() { var e = this.auth.freeTrialExpireIn(); return e && "Days" == e.differenceIn && e.remaining < 30 ? "Your trial will expire in ".concat(e.remaining, " days") : "Your trial has ended" } }, { key: "render", value: function() { var e = this; return i.a.createElement("div", { class: "container pt-4" }, i.a.createElement("div", { className: "white_box mb-5" }, i.a.createElement("div", { className: "text-center" }, i.a.createElement("h1", { className: "mb-3" }, this.getTitle()), i.a.createElement("p", null, "In order to continue using Qlearly, you need to upgrade or switch to ", i.a.createElement("a", { href: "https://chrome.google.com/webstore/detail/qlearly-basic-bookmark-ma/pgoflfgdgcmjcbhgcfjffcaeibhipmkd" }, i.a.createElement("b", null, "Qlearly Basic")), ". You can save 20% by using QLR20."), i.a.createElement("div", { class: "container" }, i.a.createElement("div", { class: "pricing-02__buttons" }, i.a.createElement("ul", { class: "pricing-02__buttons_list" }, i.a.createElement("li", { class: "tab" }, i.a.createElement("button", { className: "tab__button " + ("lifetime" == this.state.duration ? "state-active-tab" : null), type: "button", onClick: function() { return e.selectDuration("lifetime") } }, "Lifetime")), i.a.createElement("li", { class: "tab" }, i.a.createElement("button", { className: "tab__button " + ("yearly" == this.state.duration ? "state-active-tab" : null), type: "button", onClick: function() { return e.selectDuration("yearly") } }, "Yearly"))))), i.a.createElement("div", { className: "row justify-content-md-center" }, i.a.createElement("div", { class: "col-sm-8 text-muted border-right border-top border-bottom d-none" }, i.a.createElement("div", { class: "row" }, i.a.createElement("div", { class: "col-12 p-3 d-flex border-bottom" }, i.a.createElement("label", { class: "d-flex align-items-center link-hover", onClick: function() { return e.selectDuration("yearly") } }, i.a.createElement("span", { class: "radioinput" }, i.a.createElement("input", { type: "radio", name: "subscription", defaultChecked: "yearly" == this.state.duration }), i.a.createElement("span", null)), " \xa0\xa0 Yearly")), i.a.createElement("div", { class: "col-12 p-3 d-flex" }, i.a.createElement("label", { class: "d-flex align-items-center link-hover", onClick: function() { return e.selectDuration("lifetime") } }, i.a.createElement("span", { class: "radioinput" }, i.a.createElement("input", { type: "radio", name: "subscription", defaultChecked: "lifetime" == this.state.duration }), i.a.createElement("span", null)), " \xa0\xa0 Limited Lifetime Plan")))), i.a.createElement("div", { className: "lifetime" == this.state.duration ? "col-sm-8 px-0 lifetime" : "col-sm-8 px-0" }, i.a.createElement("div", { class: "pricing-02__cards_container" }, i.a.createElement("ul", { class: "pricing-02__cards_list d-flex" }, i.a.createElement("li", { className: "pro" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2" : "pricing-02__card_box flex-grow-1 mt-4 mx-2", onClick: function() { return e.selectPlan("pro") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/imac.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Pro"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab", "data-index": "yearly-price-1", "data-group": "my-pricing-group-2" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, this.getPayAmount("pro")), i.a.createElement("div", { class: "pricing-02__period" }, "/", this.duration()))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "All features, No Ads"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Access all the features available. Including Device Syncing, No Ads, and more!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "10 Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "You can have up to 10 teammates join your boards. They won't need to upgrade, just have them register and invite them!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarOrganize your bookmarks further by using different boards. With our Pro Plan, you can create an unlimited amount of boards."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Device Syncing"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Sync your bookmarks across multiple devices. Mobile browsers included!")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "pro" === this.getPlan() ? i.a.createElement(O, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("pro") } }, "Current Plan")))), i.a.createElement("li", { className: "unlimited" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2" : "pricing-02__card_box flex-grow-1 mt-4 mx-2", onClick: function() { return e.selectPlan("unlimited") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/case.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Unlimited"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab", "data-index": "yearly-price-1", "data-group": "my-pricing-group-2" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, this.getPayAmount("unlimited")), i.a.createElement("div", { class: "pricing-02__period" }, "/", this.duration()))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "All features, No Ads"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Access all the features available. Including Device Syncing, No Ads, and more!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Working with a big team? Get access to unlimited teammates with our Unlimited Plan. Invited users will not be required to upgrade."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by using different boards. Create Unlimited boards with our Unlimited Plan."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Device Syncing"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Sync your bookmarks across multiple devices. Mobile browsers included!")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "unlimited" === this.getPlan() ? i.a.createElement(O, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("unlimited") } }, "Current Plan")))), i.a.createElement("li", { className: "business" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2  d-none" : "pricing-02__card_box flex-grow-1 mt-4 mx-2  d-none", onClick: function() { return e.selectPlan("business") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/case.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Business"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab", "data-index": "yearly-price-1", "data-group": "my-pricing-group-2" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, this.getPayAmount("business")), i.a.createElement("div", { class: "pricing-02__period" }, "/", this.duration()))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "All features"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Access all the features available on Qlearly. Including Device Syncing and No Ads, ever!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "15 Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "You can have up to 15 teammates join your boards. They won't need to upgrade, just have them register and invite them!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by using different boards. Create Unlimited boards with our business plan."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Priority Support"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "We are always here to help! You can expect to hear back from us within 24 hours.")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "business" === this.getPlan() ? i.a.createElement(O, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("business") } }, "Current Plan")))), i.a.createElement("li", { className: "enterprise" == this.state.plan ? "pricing-02__card_box pricing-02__card_box--accent flex-grow-1 mt-4 mx-2 d-none" : "pricing-02__card_box flex-grow-1 mt-4 mx-2  d-none", onClick: function() { return e.selectPlan("enterprise") } }, i.a.createElement("div", { class: "pricing-02__card" }, i.a.createElement("img", { class: "pricing-02__card_img", src: "/asset/image/building.png" }), i.a.createElement("h3", { class: "pricing-02__card_title" }, "Enterprise"), i.a.createElement("div", { class: "pricing-02__price_box" }, i.a.createElement("div", { class: "pricing-02__price_item js-tab-content state-active-tab" }, i.a.createElement("div", { class: "pricing-02__price_symbol" }, "$"), i.a.createElement("div", { class: "pricing-02__price" }, "monthly" == this.state.duration ? this.state.enterprise.monthly : this.state.enterprise.yearly), i.a.createElement("div", { class: "pricing-02__period" }, "/", "monthly" == this.state.duration ? "month" : "year"))), i.a.createElement("ul", { class: "pricing-02__info" }, i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "All features"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Access all the features available on Qlearly. Including Device Syncing and No Ads, ever!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Teammates"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Working with a big team? Get access to unlimited teammates with our enterprise plan. You will only be charged for one user!"))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "\u221e Boards"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "Organize your bookmarks further by using different boards. With our Enterprise plan, you can invite an unlimited amount of users to your boards."))), i.a.createElement("li", { class: "pricing-02__info_item" }, i.a.createElement("div", { class: "pricing-02__info_item_box" }, i.a.createElement("div", { class: "pricing-02__info_item_text" }, "Priority Support"), i.a.createElement("img", { class: "pricing-02__info_item_icon js-hover-to-show-sibling", src: "/asset/image/help.svg" }), i.a.createElement("div", { class: "pricing-02__hover js-content-to-show" }, "We are always here to help! You can expect to hear back from us within 24 hours.")))), i.a.createElement("div", { class: "pricing-02__card_button" }, "enterprise" === this.getPlan() ? i.a.createElement(O, null) : i.a.createElement("button", { type: "button", class: "button button--accent-bg", onClick: function() { return e.upgrade("enterprise") } }, "Current Plan"))))))), i.a.createElement("div", { class: "border col-sm-12 mt-4 p-3 text-muted " }, i.a.createElement("div", { className: "row align-items-start" }, i.a.createElement("div", { class: "text-center col-lg-4 py-3" }, i.a.createElement("div", { class: "d-flex align-items-center justify-content-center" }, i.a.createElement("input", { type: "text", name: "promocode", ref: "promocode", id: "promocode", class: "form-control mr-2 form-control-lg", placeholder: "Promocode" }), this.state.promocode_applied_msg ? i.a.createElement("button", { class: "btn btn-primary", onClick: this.resetPromocode.bind(this) }, "X") : this.state.validatingPromode ? i.a.createElement("button", { class: "btn btn-primary btn-lg" }, "Validating...") : i.a.createElement("button", { class: "btn btn-primary btn-lg", onClick: function() { return e.applyPromocode() } }, "Apply")), this.state.promocode_applied_msg ? i.a.createElement("label", { className: "text-success" }, this.state.promocode_applied_msg) : null, this.state.promocode_err ? i.a.createElement("label", { className: "text-danger" }, this.state.promocode_err) : null), i.a.createElement("div", { className: "text-center col-lg-4 py-3" }, i.a.createElement("a", { href: "https://gumroad.com/guillaumeb", target: "_blank", class: "btn btn-warning btn-lg btn-block d-flex justify-content-center" }, "Check out with \xa0", i.a.createElement("img", { src: "/asset/image/paypal.png", height: "19" }))), i.a.createElement("div", { className: "text-center col-lg-4 py-3" }, this.state.currentPlan ? i.a.createElement("button", { class: "btn btn-primary btn-lg btn-block", onClick: this.cancelSubscription }, "Cancel Subscription") : i.a.createElement("button", { class: "btn btn-primary btn-lg btn-block", onClick: function() { return e.upgrade(e.state.plan) } }, "Current Plan")))))))) } }]), t
            }(n.Component),
            N = function(e) {
                function t(e) {
                    var a;
                    Object(c.a)(this, t), (a = Object(o.a)(this, Object(m.a)(t).call(this, e))).changeMenu = a.changeMenu.bind(Object(d.a)(a));
                    var n = new URL(window.location.href);
                    return a.state = { currentMenu: n.searchParams.get("page") || "boards" }, a
                }
                return Object(u.a)(t, e), Object(l.a)(t, [{
                    key: "changeMenu",
                    value: function(e) {
                        ["profile", "billing", "backup"].indexOf(e) > -1 && !JSON.parse(localStorage.getItem("qleary_user")) ? document.getElementsByClassName("open-signup")[0].click() : this.setState({ currentMenu: e })
                    }
                }, { key: "componentDidMount", value: function() { make_csc_entry_sortable() } }, { key: "renderExpireTrialScreen", value: function() { return i.a.createElement(B, null) } }, { key: "render", value: function() { return "trial-expire" === this.state.currentMenu ? this.renderExpireTrialScreen() : i.a.createElement("div", null, i.a.createElement(p, null), i.a.createElement("div", { class: "container pt-4" }, i.a.createElement("div", { class: "row" }, i.a.createElement("div", { class: "col-sm-4 col-md-3", id: "side_menu" }, i.a.createElement(g, { parentMethod: this.changeMenu, currentMenu: this.state.currentMenu })), i.a.createElement("div", { class: "col-sm-8 col-md-9" }, "boards" === this.state.currentMenu ? i.a.createElement(E, null) : "public_boards" === this.state.currentMenu ? i.a.createElement(k, null) : "shared_boards" === this.state.currentMenu ? i.a.createElement(x, null) : "profile" === this.state.currentMenu ? i.a.createElement(_, null) : "billing" === this.state.currentMenu ? i.a.createElement(S, null) : "invoice" === this.state.currentMenu ? i.a.createElement(P, null) : "account-setting" === this.state.currentMenu ? i.a.createElement(y, null) : "whatsnew" === this.state.currentMenu ? i.a.createElement(w, null) : "backup" === this.state.currentMenu ? i.a.createElement(C, null) : "invite_friends" === this.state.currentMenu ? i.a.createElement(w, null) : i.a.createElement(E, null))))) } }]), t
            }(n.Component);
        Boolean("localhost" === window.location.hostname || "[::1]" === window.location.hostname || window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));
        s.a.render(i.a.createElement(N, null), document.getElementById("root")), "serviceWorker" in navigator && navigator.serviceWorker.ready.then(function(e) { e.unregister() })
    }
});
//# sourceMappingURL=main.js.map